{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "648fce9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import ttk\n",
    "from tkinter import messagebox \n",
    "from ttkbootstrap import Style\n",
    "\n",
    "def make_move(row, col):\n",
    "    global current_player\n",
    "    \n",
    "    if game[row][col] == '':\n",
    "        game[row][col] = current_player\n",
    "        buttons[row][col].configure(text=current_player)\n",
    "        check_winner()\n",
    "        current_player = \"0\" if current_player == \"X\" else \"X\"\n",
    "\n",
    "def check_winner():\n",
    "    #check row colum and diagonal\n",
    "    winning_combinations = (game[0], game[1], game[2],\n",
    "                          [game[i][0] for i in range(3)],\n",
    "                          [game[i][1] for i in range(3)],\n",
    "                          [game[i][2] for i in range(3)],\n",
    "                          [game[i][i] for i in range(3)],\n",
    "                          [game[i][2 - i] for i in range(3)])\n",
    "    for combination in winning_combinations:\n",
    "        if combination[0] == combination[1] == combination[2] != '':\n",
    "            announce_winner(combination[0])\n",
    "        if all(game[i][j] != '' for i in range(3) for j in range(3)):\n",
    "            announce_winner(\"Draw\")\n",
    "\n",
    "def announce_winner(player):\n",
    "    if player == \"Draw\":\n",
    "        message = \"It is a draw!\"\n",
    "    else:\n",
    "        message = f\"player {player} wins!\"\n",
    "    messagebox.showinfo(\"Game Over\", message)\n",
    "    reset_game()\n",
    "\n",
    "def reset_game():\n",
    "    global game, current_player\n",
    "    game = [['','',''] for _ in range(3)]\n",
    "    current_player = \"X\"\n",
    "    for row in buttons:\n",
    "        for button in row:\n",
    "            button.configure(text='')\n",
    "\n",
    "root = tk.Tk()\n",
    "root.title(\"Tic-tac-to\")\n",
    "style = Style(theme=\"flatly\")\n",
    "#Create buttons for the game board\n",
    "buttons = []\n",
    "for i in range(3):\n",
    "    row = []\n",
    "    for j in range(3):\n",
    "        button = ttk.Button(root, text='', width=5, command=lambda i=i,j=j: make_move(i,j))\n",
    "        button.grid(row=i, column=j, padx=5, pady=5)\n",
    "        row.append(button)\n",
    "    buttons.append(row)\n",
    "\n",
    "#initialize the game board and the current player\n",
    "game = [['','',''] for _ in range(3)]\n",
    "current_player = \"X\"\n",
    "\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a38158f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
